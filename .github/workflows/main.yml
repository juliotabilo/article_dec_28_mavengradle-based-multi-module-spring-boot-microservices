name: Pipeline Tarea Final Julio Tabilo
on:
  push:
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      # Setear JDK para trabajar
      - name: Set up JDK 11
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '11'
          distribution: 'zulu' 
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle 

      # Compilaci√≥n del Proyecto (Se compilan los 3 proyectos)
      - name: Build 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          chmod +x gradlew
          ./gradlew clean build bootBuildImage sonar --info

      # Testear Path de Trabajo (Workspace)
      - name: Test Path
        run: |
            ls -lt 
            ls -lt $GITHUB_WORKSPACE/

      - name: Verificar creacion compilado JAR
        run: |
            ls -lt 
            ls -lt $GITHUB_WORKSPACE/build
            ls -lt $GITHUB_WORKSPACE/service-a/build/libs
            ls -lt $GITHUB_WORKSPACE/service-b/build/libs
            ls -lt $GITHUB_WORKSPACE/service-c/build/libs

      - name: Carga JAR's
        run: |
          java -jar $GITHUB_WORKSPACE/service-a/build/libs/service-a-0.0.1-SNAPSHOT.jar &
          java -jar $GITHUB_WORKSPACE/service-b/build/libs/service-b-0.0.1-SNAPSHOT.jar &
          java -jar $GITHUB_WORKSPACE/service-c/build/libs/service-c-0.0.1-SNAPSHOT.jar &

      - name: Sleep para asegurar que los Server levanten (10 segundos)
        uses: jakejarvis/wait-action@v0.1.1
        with:
          time: 10s

      - name: Prueba JAR's compilados
        run: |
          curl 127.0.0.1:8081/greeting || true
          curl 127.0.0.1:8082/greeting || true
          curl 127.0.0.1:8083/greeting || true

      # Instalar Jmeter
      - name: instalar jmeter
        run: |
          mkdir $GITHUB_WORKSPACE/test_report
          chmod +x $GITHUB_WORKSPACE/test_report
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.5.zip
          unzip apache-jmeter-5.5.zip
          cd apache-jmeter-5.5/bin
          ./jmeter -v
          pwd

      - name: instalar plugins a usar
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.5
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip
          
      - name: Ejecutar scripts jmx 
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.5/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
          
      # Artefacto de resultados de Jmeter disponibilizados
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: jmeter_test_results
         path: test_report

      # Test con Postman
      - name: Postman
        uses: matt-ball/newman-action@master
        with:
          collection: Demo-My.postman_collection.json
          reporters: '["json"]'

      #Artefacto de resultados Pruebas para Postman
      - uses: actions/upload-artifact@v1
        with:
          name: postman-test-results
          path: newman/
      

              
